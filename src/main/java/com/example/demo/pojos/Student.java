package com.example.demo.pojos;
// Generated 20 Sep, 2022 5:56:57 PM by Hibernate Tools 3.2.2.GA

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Student generated by hbm2java
 */
@Entity
@Table(name = "student", catalog = "computersikho")
public class Student implements java.io.Serializable {

	private int studentId;
	private int course;
	private int batch;
	private int enquiry;
	private String studentName;
	private String studentEmailId;
	private String studentAddress;
	private String studentGender;
	private String photoUrl;
	private Date studentDob;
	private int studentAge;
	private String studentQualification;
	private String studentMobile;
	private String studentPassword;
	private String studentUsername;
	private Set<Payment> payments = new HashSet(0);
	private Set<Paymentmaster> paymentmasters = new HashSet(0);

	public Student() {
	}

	public Student(int studentId, int course, int batch, String studentName, String studentAddress,
			String studentGender, String photoUrl, Date studentDob, int studentAge, String studentQualification,
			String studentMobile, String studentPassword, String studentUsername) {
		this.studentId = studentId;
		this.course = course;
		this.batch = batch;
		this.studentName = studentName;
		this.studentAddress = studentAddress;
		this.studentGender = studentGender;
		this.photoUrl = photoUrl;
		this.studentDob = studentDob;
		this.studentAge = studentAge;
		this.studentQualification = studentQualification;
		this.studentMobile = studentMobile;
		this.studentPassword = studentPassword;
		this.studentUsername = studentUsername;
	}

	public Student(int studentId, int course, int batch, int enquiry, String studentName,
			String studentEmailId, String studentAddress, String studentGender, String photoUrl, Date studentDob,
			int studentAge, String studentQualification, String studentMobile, String studentPassword,
			String studentUsername, Set<Payment> payments, Set<Paymentmaster> paymentmasters) {
		this.studentId = studentId;
		this.course = course;
		this.batch = batch;
		this.enquiry = enquiry;
		this.studentName = studentName;
		this.studentEmailId = studentEmailId;
		this.studentAddress = studentAddress;
		this.studentGender = studentGender;
		this.photoUrl = photoUrl;
		this.studentDob = studentDob;
		this.studentAge = studentAge;
		this.studentQualification = studentQualification;
		this.studentMobile = studentMobile;
		this.studentPassword = studentPassword;
		this.studentUsername = studentUsername;
		this.payments = payments;
		this.paymentmasters = paymentmasters;
	}

	//@Id
	@Id @GeneratedValue(strategy = GenerationType.IDENTITY )
	@Column(name = "student_id", unique = true, nullable = false)
	public int getStudentId() {
		return this.studentId;
	}

	public void setStudentId(int studentId) {
		this.studentId = studentId;
	}

	//@ManyToOne(fetch = FetchType.LAZY)
	@Column(name = "course_id", nullable = false)
	public int getCourse() {
		return this.course;
	}

	public void setCourse(int course) {
		this.course = course;
	}

	//@ManyToOne(fetch = FetchType.LAZY)
	@Column(name = "batch_id", nullable = false)
	public int getBatch() {
		return this.batch;
	}

	public void setBatch(int batch) {
		this.batch = batch;
	}

	//@ManyToOne(fetch = FetchType.LAZY)
	@Column(name = "enquiry_id")
	public int getEnquiry() {
		return this.enquiry;
	}

	public void setEnquiry(int enquiry) {
		this.enquiry = enquiry;
	}

	@Column(name = "student_name", nullable = false, length = 200)
	public String getStudentName() {
		return this.studentName;
	}

	public void setStudentName(String studentName) {
		this.studentName = studentName;
	}

	@Column(name = "student_email_id", length = 200)
	public String getStudentEmailId() {
		return this.studentEmailId;
	}

	public void setStudentEmailId(String studentEmailId) {
		this.studentEmailId = studentEmailId;
	}

	@Column(name = "student_address", nullable = false, length = 200)
	public String getStudentAddress() {
		return this.studentAddress;
	}

	public void setStudentAddress(String studentAddress) {
		this.studentAddress = studentAddress;
	}

	@Column(name = "student_gender", nullable = false, length = 200)
	public String getStudentGender() {
		return this.studentGender;
	}

	public void setStudentGender(String studentGender) {
		this.studentGender = studentGender;
	}

	@Column(name = "photo_url", nullable = false, length = 200)
	public String getPhotoUrl() {
		return this.photoUrl;
	}

	public void setPhotoUrl(String photoUrl) {
		this.photoUrl = photoUrl;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "student_dob", nullable = false, length = 10)
	public Date getStudentDob() {
		return this.studentDob;
	}

	public void setStudentDob(Date studentDob) {
		this.studentDob = studentDob;
	}

	@Column(name = "student_age", nullable = false)
	public int getStudentAge() {
		return this.studentAge;
	}

	public void setStudentAge(int studentAge) {
		this.studentAge = studentAge;
	}

	@Column(name = "student_qualification", nullable = false, length = 200)
	public String getStudentQualification() {
		return this.studentQualification;
	}

	public void setStudentQualification(String studentQualification) {
		this.studentQualification = studentQualification;
	}

	@Column(name = "student_mobile", nullable = false, length = 200)
	public String getStudentMobile() {
		return this.studentMobile;
	}

	public void setStudentMobile(String studentMobile) {
		this.studentMobile = studentMobile;
	}

	@Column(name = "student_password", nullable = false, length = 200)
	public String getStudentPassword() {
		return this.studentPassword;
	}

	public void setStudentPassword(String studentPassword) {
		this.studentPassword = studentPassword;
	}

	@Column(name = "student_username", nullable = false, length = 200)
	public String getStudentUsername() {
		return this.studentUsername;
	}

	public void setStudentUsername(String studentUsername) {
		this.studentUsername = studentUsername;
	}

	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "student")
	public Set<Payment> getPayments() {
		return this.payments;
	}

	public void setPayments(Set<Payment> payments) {
		this.payments = payments;
	}

	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "student")
	public Set<Paymentmaster> getPaymentmasters() {
		return this.paymentmasters;
	}

	public void setPaymentmasters(Set<Paymentmaster> paymentmasters) {
		this.paymentmasters = paymentmasters;
	}

}
